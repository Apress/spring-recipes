<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:flex="http://www.springframework.org/schema/flex"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:integration="http://www.springframework.org/schema/integration"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/flex
        http://www.springframework.org/schema/flex/spring-flex-1.0.xsd 
        http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
        ">


    <!--  Service => Client
         thus, any service that Spring Integration recieves messages from can be
         forwarded to this channel. That channel is then consumed by the Spring/Flex itnegration.
     -->
    <integration:channel id="toFlex"/>

    <integration:inbound-channel-adapter ref="counter" method="next" channel="toFlex">
        <integration:poller max-messages-per-poll="1">
            <integration:interval-trigger interval="5000"/>
        </integration:poller>
    </integration:inbound-channel-adapter>

    <flex:integration-message-destination id="si-recieve" message-channel="toFlex"/>


    <!--  Client => Service
        <integration:channel id="fromFlex" />

          <bean id="defaultMessageTemplate" class="org.springframework.flex.messaging.MessageTemplate" />



    -->
</beans>
